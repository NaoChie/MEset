{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Notifications from 'expo-notifications';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction formatAlarmTime(date) {\n  var options = {\n    weekday: 'long',\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric'\n  };\n  return date.toLocaleString(undefined, options);\n}\nvar activities = ['Yoga', 'Reading an interesting book', 'Folding/doing laundry', 'Dishwashing', 'Cleaning and organizing', 'Gardening', 'Cooking/meal prep', 'Washing the car', 'Knitting, crocheting, simple DIYs', 'Walking/light exercise', 'Listening to an audiobook', 'Solve a puzzle', 'Cleaning your computer desktop', 'Yard work'];\nvar getRandomActivities = function getRandomActivities() {\n  var shuffledActivities = activities.sort(function () {\n    return 0.5 - Math.random();\n  });\n  return shuffledActivities.slice(0, 3);\n};\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    notificationToken = _useState2[0],\n    setNotificationToken = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    alarmTime = _useState4[0],\n    setAlarmTime = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showDateTimePicker = _useState6[0],\n    setShowDateTimePicker = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    randomActivities = _useState8[0],\n    setRandomActivities = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    countdown = _useState10[0],\n    setCountdown = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    showMenu = _useState12[0],\n    setShowMenu = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    newActivity = _useState14[0],\n    setNewActivity = _useState14[1];\n  var breakTimePickerRef = useRef(null);\n  var newBreakTime;\n  useEffect(function () {\n    registerForPushNotificationsAsync();\n    Notifications.addNotificationReceivedListener(handleNotification);\n    setRandomActivities(getRandomActivities());\n  }, []);\n  var registerForPushNotificationsAsync = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var _yield$Notifications$ = yield Notifications.requestPermissionsAsync(),\n        status = _yield$Notifications$.status;\n      if (status === 'granted') {\n        var token = (yield Notifications.getExpoPushTokenAsync()).data;\n        setNotificationToken(token);\n      } else {\n        console.log('Permission denied for notifications');\n      }\n    });\n    return function registerForPushNotificationsAsync() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleNotification = function handleNotification(notification) {\n    console.log('Received notification:', notification);\n    setCountdown(15 * 60);\n  };\n  var handleDateChange = function handleDateChange(event, selectedDate) {\n    setShowDateTimePicker(false);\n    if (selectedDate) {\n      setAlarmTime(selectedDate);\n    }\n  };\n  var regenerateRandomActivities = function regenerateRandomActivities() {\n    setRandomActivities(getRandomActivities());\n  };\n  var showPicker = function showPicker() {\n    setShowDateTimePicker(true);\n  };\n  var addNewActivity = function addNewActivity() {\n    if (newActivity.trim() !== '') {\n      setActivities([].concat(activities, [newActivity]));\n      setNewActivity('');\n    }\n  };\n  var setActivities = function setActivities() {\n    activities.push(newActivity);\n  };\n  var setNewBreakTime = function setNewBreakTime() {\n    updateBreakTime(newBreakTime);\n  };\n  var handleBreakTimeChange = function handleBreakTimeChange(_, selectedTime) {\n    if (selectedTime) {\n      setNewBreakTime(selectedTime);\n    }\n  };\n  var updateBreakTime = function updateBreakTime() {\n    if (newBreakTime) {\n      setAlarmTime(newBreakTime);\n      setShowMenu(false);\n    }\n  };\n  useEffect(function () {\n    if (showMenu) {\n      var _breakTimePickerRef$c;\n      (_breakTimePickerRef$c = breakTimePickerRef.current) == null ? void 0 : _breakTimePickerRef$c.focus();\n    } else {\n      Keyboard.dismiss();\n    }\n  }, [showMenu]);\n  var scheduleNotification = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (alarmTime) {\n        var trigger = new Date(alarmTime);\n        var now = new Date();\n        if (trigger > now) {\n          Alert.alert('Alarm Scheduled', `Break scheduled for ${formatAlarmTime(alarmTime)}!`);\n          Keyboard.dismiss();\n          var secondsUntilNotification = Math.round((trigger - now) / 1000);\n          var identifier = yield Notifications.scheduleNotificationAsync({\n            content: {\n              title: 'Alarm',\n              body: 'Break, activated! Pick an activity now.'\n            },\n            trigger: {\n              seconds: secondsUntilNotification,\n              repeats: false\n            }\n          });\n          console.log('Notification scheduled:', identifier);\n        } else {\n          console.log('Selected date and time is in the past.');\n          Alert.alert('Failed.', `Selected date and time is in the past.`);\n        }\n      } else {\n        console.log('Please select a date and time for the alarm.');\n        Alert.alert('Please select a date and time for the alarm.');\n      }\n    });\n    return function scheduleNotification() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (countdown > 0) {\n      var countdownInterval = setInterval(function () {\n        setCountdown(function (prevCountdown) {\n          return prevCountdown - 1;\n        });\n      }, 1000);\n      return function () {\n        clearInterval(countdownInterval);\n        if (countdown === 0) {\n          Alert.alert('Time flew by.', '15 minutes has passed.', 'Please schedule another break!');\n        }\n      };\n    }\n  }, [countdown]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.imageContainer,\n      children: _jsx(Image, {\n        source: require(\"./Logo.png\"),\n        style: styles.image\n      })\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Select date & time for your next break\",\n      value: alarmTime ? formatAlarmTime(alarmTime) : '',\n      editable: false,\n      onTouchStart: showPicker\n    }), showDateTimePicker && _jsx(DateTimePicker, {\n      ref: breakTimePickerRef,\n      value: alarmTime ? alarmTime : new Date(),\n      mode: \"datetime\",\n      display: \"default\",\n      onChange: handleDateChange\n    }), _jsx(Button, {\n      title: \"Schedule\",\n      onPress: scheduleNotification\n    }), _jsx(Text, {\n      style: styles.header,\n      children: \"Try one of these today...\"\n    }), _jsx(View, {\n      children: randomActivities.map(function (activity, index) {\n        return _jsx(Text, {\n          children: `\\u2022 ${activity}`\n        }, index);\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: regenerateRandomActivities,\n      style: styles.regenerateButton,\n      children: _jsx(Text, {\n        style: styles.regenerateButtonText,\n        children: \"Regenerate\"\n      })\n    }), _jsx(Text, {\n      style: styles.countdownText,\n      children: `${Math.floor(countdown / 60)}:${countdown % 60} Break minutes left!`\n    }), showMenu && _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Add New Activity\",\n        value: newActivity,\n        onChangeText: function onChangeText(text) {\n          return setNewActivity(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: addNewActivity,\n        style: styles.addNewActivityButton,\n        children: _jsx(Text, {\n          style: styles.addNewActivityButtonText,\n          children: \"Add Activity\"\n        })\n      }), _jsx(DateTimePicker, {\n        style: styles.dateTime,\n        value: newBreakTime ? newBreakTime : new Date(),\n        mode: \"time\",\n        display: \"default\",\n        onChange: handleBreakTimeChange\n      }), _jsx(TouchableOpacity, {\n        onPress: updateBreakTime,\n        style: styles.addNewActivityButton,\n        children: _jsx(Text, {\n          style: styles.addNewActivityButtonText,\n          children: \"Update Break Time\"\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return setShowMenu(!showMenu);\n      },\n      children: _jsx(Text, {\n        style: styles.toggleMenu,\n        children: showMenu ? 'Hide Menu' : 'Show Menu'\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  dateTime: {\n    alignItems: 'center',\n    marginTop: 10\n  },\n  toggleMenu: {\n    fontStyle: 'italic'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  imageContainer: {\n    marginBottom: 10,\n    alignItems: 'center'\n  },\n  image: {\n    width: 400,\n    height: 150,\n    alignItems: 'center'\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 5,\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  header: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  regenerateButton: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 10,\n    marginTop: 20\n  },\n  regenerateButtonText: {\n    color: 'white',\n    fontSize: 16,\n    textAlign: 'center'\n  },\n  addNewActivityButton: {\n    backgroundColor: '#9cc2ff',\n    padding: 10,\n    borderRadius: 10,\n    marginTop: 10\n  },\n  addNewActivityButtonText: {\n    color: 'black',\n    fontSize: 16,\n    textAlign: 'center'\n  },\n  countdownText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginTop: 20,\n    marginBottom: 20\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Button","StyleSheet","TextInput","Keyboard","Text","TouchableOpacity","Image","Alert","Notifications","DateTimePicker","jsx","_jsx","jsxs","_jsxs","formatAlarmTime","date","options","weekday","month","day","year","hour","minute","toLocaleString","undefined","activities","getRandomActivities","shuffledActivities","sort","Math","random","slice","App","_useState","_useState2","_slicedToArray","notificationToken","setNotificationToken","_useState3","_useState4","alarmTime","setAlarmTime","_useState5","_useState6","showDateTimePicker","setShowDateTimePicker","_useState7","_useState8","randomActivities","setRandomActivities","_useState9","_useState10","countdown","setCountdown","_useState11","_useState12","showMenu","setShowMenu","_useState13","_useState14","newActivity","setNewActivity","breakTimePickerRef","newBreakTime","registerForPushNotificationsAsync","addNotificationReceivedListener","handleNotification","_ref","_asyncToGenerator","_yield$Notifications$","requestPermissionsAsync","status","token","getExpoPushTokenAsync","data","console","log","apply","arguments","notification","handleDateChange","event","selectedDate","regenerateRandomActivities","showPicker","addNewActivity","trim","setActivities","concat","push","setNewBreakTime","updateBreakTime","handleBreakTimeChange","_","selectedTime","_breakTimePickerRef$c","current","focus","dismiss","scheduleNotification","_ref2","trigger","Date","now","alert","secondsUntilNotification","round","identifier","scheduleNotificationAsync","content","title","body","seconds","repeats","countdownInterval","setInterval","prevCountdown","clearInterval","style","styles","container","children","imageContainer","source","require","image","input","placeholder","value","editable","onTouchStart","ref","mode","display","onChange","onPress","header","map","activity","index","regenerateButton","regenerateButtonText","countdownText","floor","onChangeText","text","addNewActivityButton","addNewActivityButtonText","dateTime","toggleMenu","create","alignItems","marginTop","fontStyle","flex","justifyContent","padding","marginBottom","width","height","borderColor","borderWidth","borderRadius","textAlign","fontSize","fontWeight","backgroundColor","color"],"sources":["/Users/naochie/SoftEng_Andrew/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef} from 'react';\nimport { View, Button, StyleSheet, TextInput, Keyboard, Text, TouchableOpacity, Image, Alert } from 'react-native';\nimport * as Notifications from 'expo-notifications';\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\n\nfunction formatAlarmTime(date) { // Function that formats date and time, returned in order\n  const options = {\n    weekday: 'long',\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n  };\n  return date.toLocaleString(undefined, options);\n}\n\nconst activities = [ // Can be edited. Ideas for \"deep focus\" and lack of distraction but still productive\n  'Yoga',\n  'Reading an interesting book',\n  'Folding/doing laundry',\n  'Dishwashing',\n  'Cleaning and organizing',\n  'Gardening',\n  'Cooking/meal prep',\n  'Washing the car',\n  'Knitting, crocheting, simple DIYs',\n  'Walking/light exercise',\n  'Listening to an audiobook',\n  'Solve a puzzle',\n  'Cleaning your computer desktop',\n  'Yard work'\n];\n\nconst getRandomActivities = () => { // Shuffling and generating 3 random activities to be displayed\n  const shuffledActivities = activities.sort(() => 0.5 - Math.random());\n  return shuffledActivities.slice(0, 3);\n};\n\nexport default function App() {\n  const [notificationToken, setNotificationToken] = useState(null);\n  const [alarmTime, setAlarmTime] = useState(null);\n  const [showDateTimePicker, setShowDateTimePicker] = useState(false);\n  const [randomActivities, setRandomActivities] = useState([]);\n  const [countdown, setCountdown] = useState(0);\n\n  //Update - New States for adding new activities and changing breaktime\n  const [showMenu, setShowMenu] = useState(false);\n  const [newActivity, setNewActivity] = useState('');\n  const breakTimePickerRef = useRef(null);\n  var newBreakTime\n\n\n  useEffect(() => {\n    registerForPushNotificationsAsync();\n    Notifications.addNotificationReceivedListener(handleNotification);\n    setRandomActivities(getRandomActivities());\n  }, []);\n\n  const registerForPushNotificationsAsync = async () => { // Make sure notification permissions are on\n    const { status } = await Notifications.requestPermissionsAsync();\n    if (status === 'granted') {\n      const token = (await Notifications.getExpoPushTokenAsync()).data;\n      setNotificationToken(token);\n    } else {\n      console.log('Permission denied for notifications');\n    }\n  };\n\n  const handleNotification = notification => { // What happens when the break notification goes off\n    console.log('Received notification:', notification);\n    setCountdown(15 * 60); // Start the 15-minute countdown\n  };\n\n  const handleDateChange = (event, selectedDate) => { // Hide the DateTimePicker when a date is selected\n    setShowDateTimePicker(false);\n    if (selectedDate) { // Set the selected date and time as the alarm time\n      setAlarmTime(selectedDate);\n    }\n  };\n\n  const regenerateRandomActivities = () => { // Constant for regenerating activity button\n    setRandomActivities(getRandomActivities());\n  };\n\n  const showPicker = () => {\n    setShowDateTimePicker(true); \n  };\n\n  const addNewActivity = () => { // Add input to activity list \n    if (newActivity.trim() !== '') {\n      setActivities([...activities, newActivity]);\n      setNewActivity('');\n    }\n  };\n  const setActivities = () => {\n    activities.push(newActivity)\n  };\n  const setNewBreakTime = () => {\n    updateBreakTime(newBreakTime)\n  };\n  const handleBreakTimeChange = (_, selectedTime) => { // Set New Breaktime based on input value \n    if (selectedTime) {\n      setNewBreakTime(selectedTime);\n    }\n  };\n\n  const updateBreakTime = () => {\n    if (newBreakTime) {\n      setAlarmTime(newBreakTime);\n      setShowMenu(false); // Hide the menu after updating break time\n    }\n  };\n  \n  // Use useEffect to focus on the DateTimePicker when the menu is shown\n  useEffect(() => {\n    if (showMenu) {\n      breakTimePickerRef.current?.focus(); // Assuming the DateTimePicker supports the 'focus' method\n    } else {\n      Keyboard.dismiss(); // Dismiss the keyboard when hiding the menu\n    }\n  }, [showMenu]);\n  const scheduleNotification = async () => { // Set up notifications and what happens when triggered\n    if (alarmTime) {\n      const trigger = new Date(alarmTime);\n      const now = new Date();\n\n      if (trigger > now) {\n        Alert.alert('Alarm Scheduled', `Break scheduled for ${formatAlarmTime(alarmTime)}!`);\n        Keyboard.dismiss();\n\n        const secondsUntilNotification = Math.round((trigger - now) / 1000);\n\n        const identifier = await Notifications.scheduleNotificationAsync({\n          content: { // Might've needed a token recipient here, but couldn't get working\n            title: 'Alarm',\n            body: 'Break, activated! Pick an activity now.',\n          },\n          trigger: {\n            seconds: secondsUntilNotification,\n            repeats: false,\n          },\n        });\n\n        console.log('Notification scheduled:', identifier);\n      } else {\n        console.log('Selected date and time is in the past.'); // Check for unaccepted inputs\n        Alert.alert('Failed.', `Selected date and time is in the past.`);\n      }\n    } else {\n      console.log('Please select a date and time for the alarm.');\n      Alert.alert('Please select a date and time for the alarm.');\n    }\n  };\n\n  useEffect(() => { // Step function that checks break countdown time\n    if (countdown > 0) {\n      const countdownInterval = setInterval(() => {\n        setCountdown(prevCountdown => prevCountdown - 1);\n      }, 1000);\n\n      return () => {\n        clearInterval(countdownInterval);\n        if (countdown === 0) {\n          Alert.alert('Time flew by.', '15 minutes has passed.', 'Please schedule another break!');\n        }\n      };\n    }\n  }, [countdown]);\n\n  return ( // Visual style formatting\n    <View style={styles.container}>\n      <View style={styles.imageContainer}>\n        <Image\n          source={require('./Logo.png')}\n          style={styles.image}\n        />\n      </View>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Select date & time for your next break\"\n        value={alarmTime ? formatAlarmTime(alarmTime) : ''}\n        editable={false}\n        onTouchStart={showPicker}\n      />\n      {showDateTimePicker && (\n        <DateTimePicker\n          ref={breakTimePickerRef}\n          value={alarmTime ? alarmTime : new Date()}\n          mode=\"datetime\"\n          display=\"default\"\n          onChange={handleDateChange}\n        />\n      )}\n      <Button title=\"Schedule\" onPress={scheduleNotification} />\n      <Text style={styles.header}>Try one of these today...</Text>\n      <View>\n        {randomActivities.map((activity, index) => (\n          <Text key={index}>{`\\u2022 ${activity}`}</Text>\n        ))\n        }\n      </View>\n\n      <TouchableOpacity onPress={regenerateRandomActivities} style={styles.regenerateButton}>\n        <Text style={styles.regenerateButtonText}>Regenerate</Text>\n      </TouchableOpacity>\n      <Text style={styles.countdownText}>{`${Math.floor(countdown / 60)}:${countdown % 60} Break minutes left!`}</Text>\n\n      {showMenu && (\n        <View style={styles.container}>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Add New Activity\"\n            value={newActivity}\n            onChangeText={(text) => setNewActivity(text)}\n          />\n          <TouchableOpacity onPress={addNewActivity} style={styles.addNewActivityButton}>\n            <Text style={styles.addNewActivityButtonText}>Add Activity</Text>\n          </TouchableOpacity>\n          <DateTimePicker style={styles.dateTime}\n            value={newBreakTime ? newBreakTime : new Date()}\n            mode=\"time\"\n            display=\"default\"\n            onChange={handleBreakTimeChange}\n          />\n          <TouchableOpacity onPress={updateBreakTime} style={styles.addNewActivityButton}>\n            <Text style={styles.addNewActivityButtonText}>Update Break Time</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n\n      <TouchableOpacity onPress={() => setShowMenu(!showMenu)}>\n        <Text style={styles.toggleMenu}>{showMenu ? 'Hide Menu' : 'Show Menu'}</Text>\n      </TouchableOpacity>\n    </View>\n\n\n  );\n}\n\nconst styles = StyleSheet.create({ \n  dateTime: {\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  toggleMenu: {\n    fontStyle: 'italic'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  imageContainer: {\n    marginBottom: 10,\n    alignItems: 'center',\n  },\n  image: {\n    width: 400,\n    height: 150,\n    alignItems: 'center',\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 5,\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  header: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  regenerateButton: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 10,\n    marginTop: 20,\n  },\n  regenerateButtonText: {\n    color: 'white',\n    fontSize: 16,\n    textAlign: 'center',\n  },\n  addNewActivityButton: {\n    backgroundColor: '#9cc2ff',\n    padding: 10,\n    borderRadius: 10,\n    marginTop: 10,\n  },\n  addNewActivityButtonText: {\n    color: 'black',\n    fontSize: 16,\n    textAlign: 'center',\n  },\n  countdownText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginTop: 20,\n    marginBottom: 20,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}